version: '3.9'

services:
  # Kafka en modo KRaft (sin Zookeeper)
  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv==
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka-data:/bitnami/kafka
    networks:
      - kafka-net
    logging:
      driver: json-file

  # Kafdrop - Interfaz web para ver los topics y mensajes de Kafka
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
    depends_on:
      - kafka
    networks:
      - kafka-net
    restart: always
    logging:
      driver: json-file

  # API Gateway - cliente Kafka, expone rutas HTTP
  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    depends_on:
      - kafka
    networks:
      - kafka-net
    ports:
      - "3000:3000"
    restart: always
    command: sh -c "sleep 5 && yarn start"
    logging:
      driver: json-file

  # Auth Service - microservicio Kafka
  auth-service:
    build:
      context: ./auth-service
    container_name: auth-service
    depends_on:
      - kafka
    networks:
      - kafka-net
    restart: always
    command: sh -c "sleep 5 && yarn start"
    logging:
      driver: json-file

  # User Service - microservicio Kafka
  user-service:
    build:
      context: ./user-service
    container_name: user-service
    depends_on:
      - kafka
    networks:
      - kafka-net
    restart: always
    command: sh -c "sleep 5 && yarn start"
    logging:
      driver: json-file

  # Log Service - microservicio Kafka
  log-service:
    build:
      context: ./log-service
    container_name: log-service
    depends_on:
      - kafka
    networks:
      - kafka-net
    restart: always
    command: sh -c "sleep 5 && yarn start"
    logging:
      driver: json-file

volumes:
  kafka-data:

networks:
  kafka-net:
    driver: bridge
    attachable: true
